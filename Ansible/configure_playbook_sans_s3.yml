---
- hosts: all
  user: root
  become: yes
  become_user: root
  vars:
    password: c001c@t$&g00d1uck
    base_dir: "{{ BASE_DIR|default('/home/prasanjit/') }}"
    icinga_conf: '/etc/icinga/conf.d'

  tasks:
    - name: Add user prasanjit in all hosts
      user: name=prasanjit shell=/bin/bash comment="Master User" password={{password}}

    - name: Adding prasanjit to sudoers
      lineinfile: dest=/etc/sudoers
        backup=yes
        line='prasanjit	ALL=(ALL)	ALL'
        state=present

    - name: Allow SSH connections with password
      copy: src=./Templates/sshd_config dest=/etc/ssh/ owner=root group=root mode=644 backup=yes

    - name: Install Icinga configuration file
      copy: src=./Templates/ido2db.cfg dest=/etc/icinga/ owner=root group=root mode=644 backup=yes

    - name: Add Google DNS to all hosts
      lineinfile: dest=/etc/resolv.conf
        backup=yes
        line='nameserver 8.8.8.8'
        state=present

    - name: Install packages from yum repos
      yum: name={{ item }} state=latest update_cache=no
      with_items:
        - git
        - vim

    - name: SSH Restart
      service: name=sshd pattern=/usr/sbin/sshd state=reloaded

    - name: Cloning GIT repo
      git: repo=https://github.com/prasanjit-/icinga_ansible_demo.git dest={{ base_dir }}/icinga_ansible_demo/

    - name: Adjust Timezone to Asia/Kolkata in CentOS 6
      file:
        src: /usr/share/zoneinfo/Asia/Kolkata
        dest: /etc/localtime
        state: link
      when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "6")

    - name: Import icinga key
      command: rpm --import http://packages.icinga.org/icinga.key
      ignore_errors: yes

    - name: Install icinga from yum repos
      yum:
        name: https://packages.icinga.org/epel/7/release/noarch/icinga-rpm-release-7-1.el7.centos.noarch.rpm
        state: present

    - name: Install packages from yum repos
      yum: name={{ item }} state=latest update_cache=no
      with_items:
        - docker-io
        - docker
        - httpd
        - icinga
        - icinga-gui
        - icinga-doc
        - nagios-plugins
        - icinga-idoutils-libdbi-mysql
        - python-pip

    - name: Install boto python lib to connect to AWS S3
      pip: name=boto

    - name: Download Icinga Plugins
      get_url: url=https://www.monitoring-plugins.org/download/monitoring-plugins-2.1.2.tar.gz dest=/tmp/

    - name: Create HTTP Icinga Conf file
      template: src=./Templates/myhttpd.j2 dest={{ icinga_conf }}/myhttp.conf

    - name: Create MySQL Icinga Conf file
      template: src=./Templates/mydb.j2 dest={{ icinga_conf }}/mydb.conf

    - sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

    - name: Start docker service
      service: name=docker state=started enabled=yes

    - name: Build or Check MySQL Image
      docker_image: path="{{ base_dir }}/icinga_ansible_demo/Docker/MySQL" name="mysql" state=present

    - name: Start MySQL Container - clear if exists
      command: docker rm -f mydb
      ignore_errors: yes

    - name: Start MySQL Container - invoke container
      command: docker run -d -p 3306:3306 --name mydb mysql
      ignore_errors: yes

    - name: Build or Check HTTPD Image
      docker_image: path="{{ base_dir }}/icinga_ansible_demo/Docker/HTTPD" name="httpd" state=present

    - name: Start Apache Container - clear if exists
      command: docker rm -f myhttpd
      ignore_errors: yes

    - name: Start Apache Container - invoke container
      command: docker run -d -p 90:80 --name myhttpd httpd
      ignore_errors: yes

    - name: HTTPD (Icinga) Restart
      service: name=httpd pattern=/usr/sbin/sshd state=reloaded

    - name: Make postinstall script executable
      command: chmod +x ../Scripts/Shell/postinstall.sh
      ignore_errors: yes

    - name: Run Post Install Script (if not already executed, else skip and conclude)
      command: docker rm -f myhttpd
      ignore_errors: yes
